{"ast":null,"code":"import { isValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isMacAddressValidator from 'validator/lib/isMACAddress';\nexport var IS_MAC_ADDRESS = 'isMacAddress';\n/**\n * Check if the string is a MAC address.\n * If given value is not a string, then it returns false.\n */\nexport function isMACAddress(value, options) {\n  return typeof value === 'string' && isMacAddressValidator(value, options);\n}\nexport function IsMACAddress(optionsOrValidationOptionsArg, validationOptionsArg) {\n  var options = !isValidationOptions(optionsOrValidationOptionsArg) ? optionsOrValidationOptionsArg : undefined;\n  var validationOptions = isValidationOptions(optionsOrValidationOptionsArg) ? optionsOrValidationOptionsArg : validationOptionsArg;\n  return ValidateBy({\n    name: IS_MAC_ADDRESS,\n    constraints: [options],\n    validator: {\n      validate: function (value, args) {\n        return isMACAddress(value, options);\n      },\n      defaultMessage: buildMessage(function (eachPrefix) {\n        return eachPrefix + '$property must be a MAC Address';\n      }, validationOptions)\n    }\n  }, validationOptions);\n}","map":{"version":3,"mappings":"AAAA,SAA4BA,mBAAmB,QAAQ,sBAAsB;AAC7E,SAASC,YAAY,EAAEC,UAAU,QAAQ,sBAAsB;AAC/D,OAAOC,qBAAqB,MAAM,4BAA4B;AAG9D,OAAO,IAAMC,cAAc,GAAG,cAAc;AAE5C;;;;AAIA,OAAM,SAAUC,YAAYA,CAACC,KAAc,EAAEC,OAAyC;EACpF,OAAO,OAAOD,KAAK,KAAK,QAAQ,IAAIH,qBAAqB,CAACG,KAAK,EAAEC,OAAO,CAAC;AAC3E;AAWA,OAAM,SAAUC,YAAYA,CAC1BC,6BAAmF,EACnFC,oBAAwC;EAExC,IAAMH,OAAO,GAAG,CAACP,mBAAmB,CAACS,6BAA6B,CAAC,GAAGA,6BAA6B,GAAGE,SAAS;EAC/G,IAAMC,iBAAiB,GAAGZ,mBAAmB,CAACS,6BAA6B,CAAC,GACxEA,6BAA6B,GAC7BC,oBAAoB;EAExB,OAAOR,UAAU,CACf;IACEW,IAAI,EAAET,cAAc;IACpBU,WAAW,EAAE,CAACP,OAAO,CAAC;IACtBQ,SAAS,EAAE;MACTC,QAAQ,EAAE,UAACV,KAAK,EAAEW,IAAI;QAAc,mBAAY,CAACX,KAAK,EAAEC,OAAO,CAAC;MAA5B,CAA4B;MAChEW,cAAc,EAAEjB,YAAY,CAAC,oBAAU;QAAI,iBAAU,GAAG,iCAAiC;MAA9C,CAA8C,EAAEW,iBAAiB;;GAE/G,EACDA,iBAAiB,CAClB;AACH","names":["isValidationOptions","buildMessage","ValidateBy","isMacAddressValidator","IS_MAC_ADDRESS","isMACAddress","value","options","IsMACAddress","optionsOrValidationOptionsArg","validationOptionsArg","undefined","validationOptions","name","constraints","validator","validate","args","defaultMessage"],"sourceRoot":"","sources":["../../../../src/decorator/string/IsMacAddress.ts"],"sourcesContent":["import { ValidationOptions, isValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isMacAddressValidator from 'validator/lib/isMACAddress';\nimport ValidatorJS from 'validator';\n\nexport const IS_MAC_ADDRESS = 'isMacAddress';\n\n/**\n * Check if the string is a MAC address.\n * If given value is not a string, then it returns false.\n */\nexport function isMACAddress(value: unknown, options?: ValidatorJS.IsMACAddressOptions): boolean {\n  return typeof value === 'string' && isMacAddressValidator(value, options);\n}\n\n/**\n * Check if the string is a MAC address.\n * If given value is not a string, then it returns false.\n */\nexport function IsMACAddress(\n  optionsArg?: ValidatorJS.IsMACAddressOptions,\n  validationOptionsArg?: ValidationOptions\n): PropertyDecorator;\nexport function IsMACAddress(validationOptionsArg?: ValidationOptions): PropertyDecorator;\nexport function IsMACAddress(\n  optionsOrValidationOptionsArg?: ValidatorJS.IsMACAddressOptions | ValidationOptions,\n  validationOptionsArg?: ValidationOptions\n): PropertyDecorator {\n  const options = !isValidationOptions(optionsOrValidationOptionsArg) ? optionsOrValidationOptionsArg : undefined;\n  const validationOptions = isValidationOptions(optionsOrValidationOptionsArg)\n    ? optionsOrValidationOptionsArg\n    : validationOptionsArg;\n\n  return ValidateBy(\n    {\n      name: IS_MAC_ADDRESS,\n      constraints: [options],\n      validator: {\n        validate: (value, args): boolean => isMACAddress(value, options),\n        defaultMessage: buildMessage(eachPrefix => eachPrefix + '$property must be a MAC Address', validationOptions),\n      },\n    },\n    validationOptions\n  );\n}\n"]},"metadata":{},"sourceType":"module"}