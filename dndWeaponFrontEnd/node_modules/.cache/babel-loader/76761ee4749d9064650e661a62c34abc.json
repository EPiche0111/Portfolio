{"ast":null,"code":"import { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isTaxIDValidator from 'validator/lib/isTaxID';\nexport var IS_TAX_ID = 'isTaxId';\n/**\n * Checks if the string is a valid tax ID. Default locale is `en-US`.\n * If given value is not a string, then it returns false.\n *\n * Supported locales: bg-BG, cs-CZ, de-AT, de-DE, dk-DK, el-CY, el-GR, en-CA,\n * en-IE, en-US, es-ES, et-EE, fi-FI, fr-BE, fr-FR, fr-LU, hr-HR, hu-HU, it-IT,\n * lv-LV, mt-MT, nl-NL, pl-PL, pt-BR, pt-PT, ro-RO, sk-SK, sl-SI, sv-SE.\n */\nexport function isTaxId(value, locale) {\n  return typeof value === 'string' && isTaxIDValidator(value, locale || 'en-US');\n}\n/**\n * Checks if the string is a valid tax ID. Default locale is `en-US`.\n * If given value is not a string, then it returns false.\n *\n * Supported locales: bg-BG, cs-CZ, de-AT, de-DE, dk-DK, el-CY, el-GR, en-CA,\n * en-IE, en-US, es-ES, et-EE, fi-FI, fr-BE, fr-FR, fr-LU, hr-HR, hu-HU, it-IT,\n * lv-LV, mt-MT, nl-NL, pl-PL, pt-BR, pt-PT, ro-RO, sk-SK, sl-SI, sv-SE.\n */\nexport function IsTaxId(locale, validationOptions) {\n  return ValidateBy({\n    name: IS_TAX_ID,\n    constraints: [locale],\n    validator: {\n      validate: function (value, args) {\n        return isTaxId(value, args === null || args === void 0 ? void 0 : args.constraints[0]);\n      },\n      defaultMessage: buildMessage(function (eachPrefix) {\n        return eachPrefix + '$property must be a Tax Identification Number';\n      }, validationOptions)\n    }\n  }, validationOptions);\n}","map":{"version":3,"mappings":"AACA,SAASA,YAAY,EAAEC,UAAU,QAAQ,sBAAsB;AAC/D,OAAOC,gBAAgB,MAAM,uBAAuB;AAEpD,OAAO,IAAMC,SAAS,GAAG,SAAS;AAElC;;;;;;;;AAQA,OAAM,SAAUC,OAAOA,CAACC,KAAc,EAAEC,MAAe;EACrD,OAAO,OAAOD,KAAK,KAAK,QAAQ,IAAIH,gBAAgB,CAACG,KAAK,EAAEC,MAAM,IAAI,OAAO,CAAC;AAChF;AAEA;;;;;;;;AAQA,OAAM,SAAUC,OAAOA,CAACD,MAAe,EAAEE,iBAAqC;EAC5E,OAAOP,UAAU,CACf;IACEQ,IAAI,EAAEN,SAAS;IACfO,WAAW,EAAE,CAACJ,MAAM,CAAC;IACrBK,SAAS,EAAE;MACTC,QAAQ,EAAE,UAACP,KAAK,EAAEQ,IAAI;QAAc,cAAO,CAACR,KAAK,EAAEQ,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEH,WAAW,CAAC,CAAC,CAAC,CAAC;MAApC,CAAoC;MACxEI,cAAc,EAAEd,YAAY,CAC1B,oBAAU;QAAI,iBAAU,GAAG,+CAA+C;MAA5D,CAA4D,EAC1EQ,iBAAiB;;GAGtB,EACDA,iBAAiB,CAClB;AACH","names":["buildMessage","ValidateBy","isTaxIDValidator","IS_TAX_ID","isTaxId","value","locale","IsTaxId","validationOptions","name","constraints","validator","validate","args","defaultMessage"],"sourceRoot":"","sources":["../../../../src/decorator/string/is-tax-id.ts"],"sourcesContent":["import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isTaxIDValidator from 'validator/lib/isTaxID';\n\nexport const IS_TAX_ID = 'isTaxId';\n\n/**\n * Checks if the string is a valid tax ID. Default locale is `en-US`.\n * If given value is not a string, then it returns false.\n *\n * Supported locales: bg-BG, cs-CZ, de-AT, de-DE, dk-DK, el-CY, el-GR, en-CA,\n * en-IE, en-US, es-ES, et-EE, fi-FI, fr-BE, fr-FR, fr-LU, hr-HR, hu-HU, it-IT,\n * lv-LV, mt-MT, nl-NL, pl-PL, pt-BR, pt-PT, ro-RO, sk-SK, sl-SI, sv-SE.\n */\nexport function isTaxId(value: unknown, locale?: string): boolean {\n  return typeof value === 'string' && isTaxIDValidator(value, locale || 'en-US');\n}\n\n/**\n * Checks if the string is a valid tax ID. Default locale is `en-US`.\n * If given value is not a string, then it returns false.\n *\n * Supported locales: bg-BG, cs-CZ, de-AT, de-DE, dk-DK, el-CY, el-GR, en-CA,\n * en-IE, en-US, es-ES, et-EE, fi-FI, fr-BE, fr-FR, fr-LU, hr-HR, hu-HU, it-IT,\n * lv-LV, mt-MT, nl-NL, pl-PL, pt-BR, pt-PT, ro-RO, sk-SK, sl-SI, sv-SE.\n */\nexport function IsTaxId(locale?: string, validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_TAX_ID,\n      constraints: [locale],\n      validator: {\n        validate: (value, args): boolean => isTaxId(value, args?.constraints[0]),\n        defaultMessage: buildMessage(\n          eachPrefix => eachPrefix + '$property must be a Tax Identification Number',\n          validationOptions\n        ),\n      },\n    },\n    validationOptions\n  );\n}\n"]},"metadata":{},"sourceType":"module"}