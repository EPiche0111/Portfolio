{"ast":null,"code":"import { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isISO31661Alpha3Validator from 'validator/lib/isISO31661Alpha3';\nexport var IS_ISO31661_ALPHA_3 = 'isISO31661Alpha3';\n/**\n * Check if the string is a valid [ISO 3166-1 alpha-3](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3) officially assigned country code.\n */\nexport function isISO31661Alpha3(value) {\n  return typeof value === 'string' && isISO31661Alpha3Validator(value);\n}\n/**\n * Check if the string is a valid [ISO 3166-1 alpha-3](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3) officially assigned country code.\n */\nexport function IsISO31661Alpha3(validationOptions) {\n  return ValidateBy({\n    name: IS_ISO31661_ALPHA_3,\n    validator: {\n      validate: function (value, args) {\n        return isISO31661Alpha3(value);\n      },\n      defaultMessage: buildMessage(function (eachPrefix) {\n        return eachPrefix + '$property must be a valid ISO31661 Alpha3 code';\n      }, validationOptions)\n    }\n  }, validationOptions);\n}","map":{"version":3,"mappings":"AACA,SAASA,YAAY,EAAEC,UAAU,QAAQ,sBAAsB;AAC/D,OAAOC,yBAAyB,MAAM,gCAAgC;AAEtE,OAAO,IAAMC,mBAAmB,GAAG,kBAAkB;AAErD;;;AAGA,OAAM,SAAUC,gBAAgBA,CAACC,KAAc;EAC7C,OAAO,OAAOA,KAAK,KAAK,QAAQ,IAAIH,yBAAyB,CAACG,KAAK,CAAC;AACtE;AAEA;;;AAGA,OAAM,SAAUC,gBAAgBA,CAACC,iBAAqC;EACpE,OAAON,UAAU,CACf;IACEO,IAAI,EAAEL,mBAAmB;IACzBM,SAAS,EAAE;MACTC,QAAQ,EAAE,UAACL,KAAK,EAAEM,IAAI;QAAc,uBAAgB,CAACN,KAAK,CAAC;MAAvB,CAAuB;MAC3DO,cAAc,EAAEZ,YAAY,CAC1B,oBAAU;QAAI,iBAAU,GAAG,gDAAgD;MAA7D,CAA6D,EAC3EO,iBAAiB;;GAGtB,EACDA,iBAAiB,CAClB;AACH","names":["buildMessage","ValidateBy","isISO31661Alpha3Validator","IS_ISO31661_ALPHA_3","isISO31661Alpha3","value","IsISO31661Alpha3","validationOptions","name","validator","validate","args","defaultMessage"],"sourceRoot":"","sources":["../../../../src/decorator/string/IsISO31661Alpha3.ts"],"sourcesContent":["import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isISO31661Alpha3Validator from 'validator/lib/isISO31661Alpha3';\n\nexport const IS_ISO31661_ALPHA_3 = 'isISO31661Alpha3';\n\n/**\n * Check if the string is a valid [ISO 3166-1 alpha-3](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3) officially assigned country code.\n */\nexport function isISO31661Alpha3(value: unknown): boolean {\n  return typeof value === 'string' && isISO31661Alpha3Validator(value);\n}\n\n/**\n * Check if the string is a valid [ISO 3166-1 alpha-3](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3) officially assigned country code.\n */\nexport function IsISO31661Alpha3(validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_ISO31661_ALPHA_3,\n      validator: {\n        validate: (value, args): boolean => isISO31661Alpha3(value),\n        defaultMessage: buildMessage(\n          eachPrefix => eachPrefix + '$property must be a valid ISO31661 Alpha3 code',\n          validationOptions\n        ),\n      },\n    },\n    validationOptions\n  );\n}\n"]},"metadata":{},"sourceType":"module"}