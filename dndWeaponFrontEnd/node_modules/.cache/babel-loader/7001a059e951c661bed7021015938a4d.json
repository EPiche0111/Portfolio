{"ast":null,"code":"import { buildMessage, ValidateBy } from '../common/ValidateBy';\nexport var EQUALS = 'equals';\n/**\n * Checks if value matches (\"===\") the comparison.\n */\nexport function equals(value, comparison) {\n  return value === comparison;\n}\n/**\n * Checks if value matches (\"===\") the comparison.\n */\nexport function Equals(comparison, validationOptions) {\n  return ValidateBy({\n    name: EQUALS,\n    constraints: [comparison],\n    validator: {\n      validate: function (value, args) {\n        return equals(value, args === null || args === void 0 ? void 0 : args.constraints[0]);\n      },\n      defaultMessage: buildMessage(function (eachPrefix) {\n        return eachPrefix + '$property must be equal to $constraint1';\n      }, validationOptions)\n    }\n  }, validationOptions);\n}","map":{"version":3,"mappings":"AACA,SAASA,YAAY,EAAEC,UAAU,QAAQ,sBAAsB;AAE/D,OAAO,IAAMC,MAAM,GAAG,QAAQ;AAE9B;;;AAGA,OAAM,SAAUC,MAAMA,CAACC,KAAc,EAAEC,UAAmB;EACxD,OAAOD,KAAK,KAAKC,UAAU;AAC7B;AAEA;;;AAGA,OAAM,SAAUC,MAAMA,CAACD,UAAe,EAAEE,iBAAqC;EAC3E,OAAON,UAAU,CACf;IACEO,IAAI,EAAEN,MAAM;IACZO,WAAW,EAAE,CAACJ,UAAU,CAAC;IACzBK,SAAS,EAAE;MACTC,QAAQ,EAAE,UAACP,KAAK,EAAEQ,IAAI;QAAc,aAAM,CAACR,KAAK,EAAEQ,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEH,WAAW,CAAC,CAAC,CAAC,CAAC;MAAnC,CAAmC;MACvEI,cAAc,EAAEb,YAAY,CAC1B,oBAAU;QAAI,iBAAU,GAAG,yCAAyC;MAAtD,CAAsD,EACpEO,iBAAiB;;GAGtB,EACDA,iBAAiB,CAClB;AACH","names":["buildMessage","ValidateBy","EQUALS","equals","value","comparison","Equals","validationOptions","name","constraints","validator","validate","args","defaultMessage"],"sourceRoot":"","sources":["../../../../src/decorator/common/Equals.ts"],"sourcesContent":["import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\n\nexport const EQUALS = 'equals';\n\n/**\n * Checks if value matches (\"===\") the comparison.\n */\nexport function equals(value: unknown, comparison: unknown): boolean {\n  return value === comparison;\n}\n\n/**\n * Checks if value matches (\"===\") the comparison.\n */\nexport function Equals(comparison: any, validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: EQUALS,\n      constraints: [comparison],\n      validator: {\n        validate: (value, args): boolean => equals(value, args?.constraints[0]),\n        defaultMessage: buildMessage(\n          eachPrefix => eachPrefix + '$property must be equal to $constraint1',\n          validationOptions\n        ),\n      },\n    },\n    validationOptions\n  );\n}\n"]},"metadata":{},"sourceType":"module"}