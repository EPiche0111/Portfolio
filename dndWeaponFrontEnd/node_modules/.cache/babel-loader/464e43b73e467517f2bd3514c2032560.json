{"ast":null,"code":"import { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isDataURIValidator from 'validator/lib/isDataURI';\nexport var IS_DATA_URI = 'isDataURI';\n/**\n * Check if the string is a data uri format.\n * If given value is not a string, then it returns false.\n */\nexport function isDataURI(value) {\n  return typeof value === 'string' && isDataURIValidator(value);\n}\n/**\n * Check if the string is a data uri format.\n * If given value is not a string, then it returns false.\n */\nexport function IsDataURI(validationOptions) {\n  return ValidateBy({\n    name: IS_DATA_URI,\n    validator: {\n      validate: function (value, args) {\n        return isDataURI(value);\n      },\n      defaultMessage: buildMessage(function (eachPrefix) {\n        return eachPrefix + '$property must be a data uri format';\n      }, validationOptions)\n    }\n  }, validationOptions);\n}","map":{"version":3,"mappings":"AACA,SAASA,YAAY,EAAEC,UAAU,QAAQ,sBAAsB;AAC/D,OAAOC,kBAAkB,MAAM,yBAAyB;AAExD,OAAO,IAAMC,WAAW,GAAG,WAAW;AAEtC;;;;AAIA,OAAM,SAAUC,SAASA,CAACC,KAAc;EACtC,OAAO,OAAOA,KAAK,KAAK,QAAQ,IAAIH,kBAAkB,CAACG,KAAK,CAAC;AAC/D;AAEA;;;;AAIA,OAAM,SAAUC,SAASA,CAACC,iBAAqC;EAC7D,OAAON,UAAU,CACf;IACEO,IAAI,EAAEL,WAAW;IACjBM,SAAS,EAAE;MACTC,QAAQ,EAAE,UAACL,KAAK,EAAEM,IAAI;QAAc,gBAAS,CAACN,KAAK,CAAC;MAAhB,CAAgB;MACpDO,cAAc,EAAEZ,YAAY,CAC1B,oBAAU;QAAI,iBAAU,GAAG,qCAAqC;MAAlD,CAAkD,EAChEO,iBAAiB;;GAGtB,EACDA,iBAAiB,CAClB;AACH","names":["buildMessage","ValidateBy","isDataURIValidator","IS_DATA_URI","isDataURI","value","IsDataURI","validationOptions","name","validator","validate","args","defaultMessage"],"sourceRoot":"","sources":["../../../../src/decorator/string/IsDataURI.ts"],"sourcesContent":["import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isDataURIValidator from 'validator/lib/isDataURI';\n\nexport const IS_DATA_URI = 'isDataURI';\n\n/**\n * Check if the string is a data uri format.\n * If given value is not a string, then it returns false.\n */\nexport function isDataURI(value: unknown): boolean {\n  return typeof value === 'string' && isDataURIValidator(value);\n}\n\n/**\n * Check if the string is a data uri format.\n * If given value is not a string, then it returns false.\n */\nexport function IsDataURI(validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_DATA_URI,\n      validator: {\n        validate: (value, args): boolean => isDataURI(value),\n        defaultMessage: buildMessage(\n          eachPrefix => eachPrefix + '$property must be a data uri format',\n          validationOptions\n        ),\n      },\n    },\n    validationOptions\n  );\n}\n"]},"metadata":{},"sourceType":"module"}