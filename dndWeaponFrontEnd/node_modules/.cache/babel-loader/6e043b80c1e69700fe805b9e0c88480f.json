{"ast":null,"code":"import { buildMessage, ValidateBy } from '../common/ValidateBy';\nexport var ARRAY_UNIQUE = 'arrayUnique';\n/**\n * Checks if all array's values are unique. Comparison for objects is reference-based.\n * If null or undefined is given then this function returns false.\n */\nexport function arrayUnique(array, identifier) {\n  if (!Array.isArray(array)) return false;\n  if (identifier) {\n    array = array.map(function (o) {\n      return o != null ? identifier(o) : o;\n    });\n  }\n  var uniqueItems = array.filter(function (a, b, c) {\n    return c.indexOf(a) === b;\n  });\n  return array.length === uniqueItems.length;\n}\n/**\n * Checks if all array's values are unique. Comparison for objects is reference-based.\n * If null or undefined is given then this function returns false.\n */\nexport function ArrayUnique(identifierOrOptions, validationOptions) {\n  var identifier = typeof identifierOrOptions === 'function' ? identifierOrOptions : undefined;\n  var options = typeof identifierOrOptions !== 'function' ? identifierOrOptions : validationOptions;\n  return ValidateBy({\n    name: ARRAY_UNIQUE,\n    validator: {\n      validate: function (value, args) {\n        return arrayUnique(value, identifier);\n      },\n      defaultMessage: buildMessage(function (eachPrefix) {\n        return eachPrefix + \"All $property's elements must be unique\";\n      }, options)\n    }\n  }, options);\n}","map":{"version":3,"mappings":"AACA,SAASA,YAAY,EAAEC,UAAU,QAAQ,sBAAsB;AAE/D,OAAO,IAAMC,YAAY,GAAG,aAAa;AAGzC;;;;AAIA,OAAM,SAAUC,WAAWA,CAACC,KAAgB,EAAEC,UAAkC;EAC9E,IAAI,CAACC,KAAK,CAACC,OAAO,CAACH,KAAK,CAAC,EAAE,OAAO,KAAK;EAEvC,IAAIC,UAAU,EAAE;IACdD,KAAK,GAAGA,KAAK,CAACI,GAAG,CAAC,WAAC;MAAI,OAACC,CAAC,IAAI,IAAI,GAAGJ,UAAU,CAACI,CAAC,CAAC,GAAGA,CAAC;IAA9B,CAA+B,CAAC;;EAGzD,IAAMC,WAAW,GAAGN,KAAK,CAACO,MAAM,CAAC,UAACC,CAAC,EAAEC,CAAC,EAAEC,CAAC;IAAK,QAAC,CAACC,OAAO,CAACH,CAAC,CAAC,KAAKC,CAAC;EAAlB,CAAkB,CAAC;EACjE,OAAOT,KAAK,CAACY,MAAM,KAAKN,WAAW,CAACM,MAAM;AAC5C;AAEA;;;;AAIA,OAAM,SAAUC,WAAWA,CACzBC,mBAAkE,EAClEC,iBAAqC;EAErC,IAAMd,UAAU,GAAG,OAAOa,mBAAmB,KAAK,UAAU,GAAGA,mBAAmB,GAAGE,SAAS;EAC9F,IAAMC,OAAO,GAAG,OAAOH,mBAAmB,KAAK,UAAU,GAAGA,mBAAmB,GAAGC,iBAAiB;EAEnG,OAAOlB,UAAU,CACf;IACEqB,IAAI,EAAEpB,YAAY;IAClBqB,SAAS,EAAE;MACTC,QAAQ,EAAE,UAACC,KAAK,EAAEC,IAAI;QAAc,kBAAW,CAACD,KAAK,EAAEpB,UAAU,CAAC;MAA9B,CAA8B;MAClEsB,cAAc,EAAE3B,YAAY,CAAC,oBAAU;QAAI,iBAAU,GAAG,yCAAyC;MAAtD,CAAsD,EAAEqB,OAAO;;GAE7G,EACDA,OAAO,CACR;AACH","names":["buildMessage","ValidateBy","ARRAY_UNIQUE","arrayUnique","array","identifier","Array","isArray","map","o","uniqueItems","filter","a","b","c","indexOf","length","ArrayUnique","identifierOrOptions","validationOptions","undefined","options","name","validator","validate","value","args","defaultMessage"],"sourceRoot":"","sources":["../../../../src/decorator/array/ArrayUnique.ts"],"sourcesContent":["import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\n\nexport const ARRAY_UNIQUE = 'arrayUnique';\nexport type ArrayUniqueIdentifier<T = any> = (o: T) => any;\n\n/**\n * Checks if all array's values are unique. Comparison for objects is reference-based.\n * If null or undefined is given then this function returns false.\n */\nexport function arrayUnique(array: unknown[], identifier?: ArrayUniqueIdentifier): boolean {\n  if (!Array.isArray(array)) return false;\n\n  if (identifier) {\n    array = array.map(o => (o != null ? identifier(o) : o));\n  }\n\n  const uniqueItems = array.filter((a, b, c) => c.indexOf(a) === b);\n  return array.length === uniqueItems.length;\n}\n\n/**\n * Checks if all array's values are unique. Comparison for objects is reference-based.\n * If null or undefined is given then this function returns false.\n */\nexport function ArrayUnique<T = any>(\n  identifierOrOptions?: ArrayUniqueIdentifier<T> | ValidationOptions,\n  validationOptions?: ValidationOptions\n): PropertyDecorator {\n  const identifier = typeof identifierOrOptions === 'function' ? identifierOrOptions : undefined;\n  const options = typeof identifierOrOptions !== 'function' ? identifierOrOptions : validationOptions;\n\n  return ValidateBy(\n    {\n      name: ARRAY_UNIQUE,\n      validator: {\n        validate: (value, args): boolean => arrayUnique(value, identifier),\n        defaultMessage: buildMessage(eachPrefix => eachPrefix + \"All $property's elements must be unique\", options),\n      },\n    },\n    options\n  );\n}\n"]},"metadata":{},"sourceType":"module"}