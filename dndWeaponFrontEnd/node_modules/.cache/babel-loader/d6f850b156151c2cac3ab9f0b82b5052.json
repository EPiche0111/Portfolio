{"ast":null,"code":"import { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isFullWidthValidator from 'validator/lib/isFullWidth';\nexport var IS_FULL_WIDTH = 'isFullWidth';\n/**\n * Checks if the string contains any full-width chars.\n * If given value is not a string, then it returns false.\n */\nexport function isFullWidth(value) {\n  return typeof value === 'string' && isFullWidthValidator(value);\n}\n/**\n * Checks if the string contains any full-width chars.\n * If given value is not a string, then it returns false.\n */\nexport function IsFullWidth(validationOptions) {\n  return ValidateBy({\n    name: IS_FULL_WIDTH,\n    validator: {\n      validate: function (value, args) {\n        return isFullWidth(value);\n      },\n      defaultMessage: buildMessage(function (eachPrefix) {\n        return eachPrefix + '$property must contain a full-width characters';\n      }, validationOptions)\n    }\n  }, validationOptions);\n}","map":{"version":3,"mappings":"AACA,SAASA,YAAY,EAAEC,UAAU,QAAQ,sBAAsB;AAC/D,OAAOC,oBAAoB,MAAM,2BAA2B;AAE5D,OAAO,IAAMC,aAAa,GAAG,aAAa;AAE1C;;;;AAIA,OAAM,SAAUC,WAAWA,CAACC,KAAc;EACxC,OAAO,OAAOA,KAAK,KAAK,QAAQ,IAAIH,oBAAoB,CAACG,KAAK,CAAC;AACjE;AAEA;;;;AAIA,OAAM,SAAUC,WAAWA,CAACC,iBAAqC;EAC/D,OAAON,UAAU,CACf;IACEO,IAAI,EAAEL,aAAa;IACnBM,SAAS,EAAE;MACTC,QAAQ,EAAE,UAACL,KAAK,EAAEM,IAAI;QAAc,kBAAW,CAACN,KAAK,CAAC;MAAlB,CAAkB;MACtDO,cAAc,EAAEZ,YAAY,CAC1B,oBAAU;QAAI,iBAAU,GAAG,gDAAgD;MAA7D,CAA6D,EAC3EO,iBAAiB;;GAGtB,EACDA,iBAAiB,CAClB;AACH","names":["buildMessage","ValidateBy","isFullWidthValidator","IS_FULL_WIDTH","isFullWidth","value","IsFullWidth","validationOptions","name","validator","validate","args","defaultMessage"],"sourceRoot":"","sources":["../../../../src/decorator/string/IsFullWidth.ts"],"sourcesContent":["import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isFullWidthValidator from 'validator/lib/isFullWidth';\n\nexport const IS_FULL_WIDTH = 'isFullWidth';\n\n/**\n * Checks if the string contains any full-width chars.\n * If given value is not a string, then it returns false.\n */\nexport function isFullWidth(value: unknown): boolean {\n  return typeof value === 'string' && isFullWidthValidator(value);\n}\n\n/**\n * Checks if the string contains any full-width chars.\n * If given value is not a string, then it returns false.\n */\nexport function IsFullWidth(validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_FULL_WIDTH,\n      validator: {\n        validate: (value, args): boolean => isFullWidth(value),\n        defaultMessage: buildMessage(\n          eachPrefix => eachPrefix + '$property must contain a full-width characters',\n          validationOptions\n        ),\n      },\n    },\n    validationOptions\n  );\n}\n"]},"metadata":{},"sourceType":"module"}