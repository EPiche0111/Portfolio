{"ast":null,"code":"import { buildMessage, ValidateBy } from '../common/ValidateBy';\nexport var ARRAY_NOT_EMPTY = 'arrayNotEmpty';\n/**\n * Checks if given array is not empty.\n * If null or undefined is given then this function returns false.\n */\nexport function arrayNotEmpty(array) {\n  return Array.isArray(array) && array.length > 0;\n}\n/**\n * Checks if given array is not empty.\n * If null or undefined is given then this function returns false.\n */\nexport function ArrayNotEmpty(validationOptions) {\n  return ValidateBy({\n    name: ARRAY_NOT_EMPTY,\n    validator: {\n      validate: function (value, args) {\n        return arrayNotEmpty(value);\n      },\n      defaultMessage: buildMessage(function (eachPrefix) {\n        return eachPrefix + '$property should not be empty';\n      }, validationOptions)\n    }\n  }, validationOptions);\n}","map":{"version":3,"mappings":"AACA,SAASA,YAAY,EAAEC,UAAU,QAAQ,sBAAsB;AAE/D,OAAO,IAAMC,eAAe,GAAG,eAAe;AAE9C;;;;AAIA,OAAM,SAAUC,aAAaA,CAACC,KAAc;EAC1C,OAAOC,KAAK,CAACC,OAAO,CAACF,KAAK,CAAC,IAAIA,KAAK,CAACG,MAAM,GAAG,CAAC;AACjD;AAEA;;;;AAIA,OAAM,SAAUC,aAAaA,CAACC,iBAAqC;EACjE,OAAOR,UAAU,CACf;IACES,IAAI,EAAER,eAAe;IACrBS,SAAS,EAAE;MACTC,QAAQ,EAAE,UAACC,KAAK,EAAEC,IAAI;QAAc,oBAAa,CAACD,KAAK,CAAC;MAApB,CAAoB;MACxDE,cAAc,EAAEf,YAAY,CAAC,oBAAU;QAAI,iBAAU,GAAG,+BAA+B;MAA5C,CAA4C,EAAES,iBAAiB;;GAE7G,EACDA,iBAAiB,CAClB;AACH","names":["buildMessage","ValidateBy","ARRAY_NOT_EMPTY","arrayNotEmpty","array","Array","isArray","length","ArrayNotEmpty","validationOptions","name","validator","validate","value","args","defaultMessage"],"sourceRoot":"","sources":["../../../../src/decorator/array/ArrayNotEmpty.ts"],"sourcesContent":["import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\n\nexport const ARRAY_NOT_EMPTY = 'arrayNotEmpty';\n\n/**\n * Checks if given array is not empty.\n * If null or undefined is given then this function returns false.\n */\nexport function arrayNotEmpty(array: unknown): boolean {\n  return Array.isArray(array) && array.length > 0;\n}\n\n/**\n * Checks if given array is not empty.\n * If null or undefined is given then this function returns false.\n */\nexport function ArrayNotEmpty(validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: ARRAY_NOT_EMPTY,\n      validator: {\n        validate: (value, args): boolean => arrayNotEmpty(value),\n        defaultMessage: buildMessage(eachPrefix => eachPrefix + '$property should not be empty', validationOptions),\n      },\n    },\n    validationOptions\n  );\n}\n"]},"metadata":{},"sourceType":"module"}