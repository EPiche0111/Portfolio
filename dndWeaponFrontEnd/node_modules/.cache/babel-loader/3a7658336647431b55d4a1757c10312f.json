{"ast":null,"code":"import { buildMessage, ValidateBy } from './ValidateBy';\nimport isLatLongValidator from 'validator/lib/isLatLong';\nexport var IS_LATLONG = 'isLatLong';\n/**\n * Checks if a value is string in format a \"latitude,longitude\".\n */\nexport function isLatLong(value) {\n  return typeof value === 'string' && isLatLongValidator(value);\n}\n/**\n * Checks if a value is string in format a \"latitude,longitude\".\n */\nexport function IsLatLong(validationOptions) {\n  return ValidateBy({\n    name: IS_LATLONG,\n    validator: {\n      validate: function (value, args) {\n        return isLatLong(value);\n      },\n      defaultMessage: buildMessage(function (eachPrefix) {\n        return eachPrefix + '$property must be a latitude,longitude string';\n      }, validationOptions)\n    }\n  }, validationOptions);\n}","map":{"version":3,"mappings":"AACA,SAASA,YAAY,EAAEC,UAAU,QAAQ,cAAc;AACvD,OAAOC,kBAAkB,MAAM,yBAAyB;AAExD,OAAO,IAAMC,UAAU,GAAG,WAAW;AAErC;;;AAGA,OAAM,SAAUC,SAASA,CAACC,KAAa;EACrC,OAAO,OAAOA,KAAK,KAAK,QAAQ,IAAIH,kBAAkB,CAACG,KAAK,CAAC;AAC/D;AAEA;;;AAGA,OAAM,SAAUC,SAASA,CAACC,iBAAqC;EAC7D,OAAON,UAAU,CACf;IACEO,IAAI,EAAEL,UAAU;IAChBM,SAAS,EAAE;MACTC,QAAQ,EAAE,UAACL,KAAK,EAAEM,IAAI;QAAc,gBAAS,CAACN,KAAK,CAAC;MAAhB,CAAgB;MACpDO,cAAc,EAAEZ,YAAY,CAC1B,oBAAU;QAAI,iBAAU,GAAG,+CAA+C;MAA5D,CAA4D,EAC1EO,iBAAiB;;GAGtB,EACDA,iBAAiB,CAClB;AACH","names":["buildMessage","ValidateBy","isLatLongValidator","IS_LATLONG","isLatLong","value","IsLatLong","validationOptions","name","validator","validate","args","defaultMessage"],"sourceRoot":"","sources":["../../../../src/decorator/common/IsLatLong.ts"],"sourcesContent":["import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from './ValidateBy';\nimport isLatLongValidator from 'validator/lib/isLatLong';\n\nexport const IS_LATLONG = 'isLatLong';\n\n/**\n * Checks if a value is string in format a \"latitude,longitude\".\n */\nexport function isLatLong(value: string): boolean {\n  return typeof value === 'string' && isLatLongValidator(value);\n}\n\n/**\n * Checks if a value is string in format a \"latitude,longitude\".\n */\nexport function IsLatLong(validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_LATLONG,\n      validator: {\n        validate: (value, args): boolean => isLatLong(value),\n        defaultMessage: buildMessage(\n          eachPrefix => eachPrefix + '$property must be a latitude,longitude string',\n          validationOptions\n        ),\n      },\n    },\n    validationOptions\n  );\n}\n"]},"metadata":{},"sourceType":"module"}