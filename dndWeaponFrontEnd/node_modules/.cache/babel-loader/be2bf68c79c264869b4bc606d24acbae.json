{"ast":null,"code":"import { buildMessage, ValidateBy } from '../common/ValidateBy';\nexport var IS_NOT_EMPTY = 'isNotEmpty';\n/**\n * Checks if given value is not empty (!== '', !== null, !== undefined).\n */\nexport function isNotEmpty(value) {\n  return value !== '' && value !== null && value !== undefined;\n}\n/**\n * Checks if given value is not empty (!== '', !== null, !== undefined).\n */\nexport function IsNotEmpty(validationOptions) {\n  return ValidateBy({\n    name: IS_NOT_EMPTY,\n    validator: {\n      validate: function (value, args) {\n        return isNotEmpty(value);\n      },\n      defaultMessage: buildMessage(function (eachPrefix) {\n        return eachPrefix + '$property should not be empty';\n      }, validationOptions)\n    }\n  }, validationOptions);\n}","map":{"version":3,"mappings":"AACA,SAASA,YAAY,EAAEC,UAAU,QAAQ,sBAAsB;AAE/D,OAAO,IAAMC,YAAY,GAAG,YAAY;AAExC;;;AAGA,OAAM,SAAUC,UAAUA,CAACC,KAAc;EACvC,OAAOA,KAAK,KAAK,EAAE,IAAIA,KAAK,KAAK,IAAI,IAAIA,KAAK,KAAKC,SAAS;AAC9D;AAEA;;;AAGA,OAAM,SAAUC,UAAUA,CAACC,iBAAqC;EAC9D,OAAON,UAAU,CACf;IACEO,IAAI,EAAEN,YAAY;IAClBO,SAAS,EAAE;MACTC,QAAQ,EAAE,UAACN,KAAK,EAAEO,IAAI;QAAc,iBAAU,CAACP,KAAK,CAAC;MAAjB,CAAiB;MACrDQ,cAAc,EAAEZ,YAAY,CAAC,oBAAU;QAAI,iBAAU,GAAG,+BAA+B;MAA5C,CAA4C,EAAEO,iBAAiB;;GAE7G,EACDA,iBAAiB,CAClB;AACH","names":["buildMessage","ValidateBy","IS_NOT_EMPTY","isNotEmpty","value","undefined","IsNotEmpty","validationOptions","name","validator","validate","args","defaultMessage"],"sourceRoot":"","sources":["../../../../src/decorator/common/IsNotEmpty.ts"],"sourcesContent":["import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\n\nexport const IS_NOT_EMPTY = 'isNotEmpty';\n\n/**\n * Checks if given value is not empty (!== '', !== null, !== undefined).\n */\nexport function isNotEmpty(value: unknown): boolean {\n  return value !== '' && value !== null && value !== undefined;\n}\n\n/**\n * Checks if given value is not empty (!== '', !== null, !== undefined).\n */\nexport function IsNotEmpty(validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_NOT_EMPTY,\n      validator: {\n        validate: (value, args): boolean => isNotEmpty(value),\n        defaultMessage: buildMessage(eachPrefix => eachPrefix + '$property should not be empty', validationOptions),\n      },\n    },\n    validationOptions\n  );\n}\n"]},"metadata":{},"sourceType":"module"}