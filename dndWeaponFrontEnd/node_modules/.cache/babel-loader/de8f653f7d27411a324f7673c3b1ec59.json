{"ast":null,"code":"import { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isOctalValidator from 'validator/lib/isOctal';\nexport var IS_OCTAL = 'isOctal';\n/**\n * Check if the string is a valid octal number.\n * If given value is not a string, then it returns false.\n */\nexport function isOctal(value) {\n  return typeof value === 'string' && isOctalValidator(value);\n}\n/**\n * Check if the string is a valid octal number.\n * If given value is not a string, then it returns false.\n */\nexport function IsOctal(validationOptions) {\n  return ValidateBy({\n    name: IS_OCTAL,\n    validator: {\n      validate: function (value, args) {\n        return isOctal(value);\n      },\n      defaultMessage: buildMessage(function (eachPrefix) {\n        return eachPrefix + '$property must be valid octal number';\n      }, validationOptions)\n    }\n  }, validationOptions);\n}","map":{"version":3,"mappings":"AACA,SAASA,YAAY,EAAEC,UAAU,QAAQ,sBAAsB;AAC/D,OAAOC,gBAAgB,MAAM,uBAAuB;AAEpD,OAAO,IAAMC,QAAQ,GAAG,SAAS;AAEjC;;;;AAIA,OAAM,SAAUC,OAAOA,CAACC,KAAc;EACpC,OAAO,OAAOA,KAAK,KAAK,QAAQ,IAAIH,gBAAgB,CAACG,KAAK,CAAC;AAC7D;AAEA;;;;AAIA,OAAM,SAAUC,OAAOA,CAACC,iBAAqC;EAC3D,OAAON,UAAU,CACf;IACEO,IAAI,EAAEL,QAAQ;IACdM,SAAS,EAAE;MACTC,QAAQ,EAAE,UAACL,KAAK,EAAEM,IAAI;QAAc,cAAO,CAACN,KAAK,CAAC;MAAd,CAAc;MAClDO,cAAc,EAAEZ,YAAY,CAC1B,oBAAU;QAAI,iBAAU,GAAG,sCAAsC;MAAnD,CAAmD,EACjEO,iBAAiB;;GAGtB,EACDA,iBAAiB,CAClB;AACH","names":["buildMessage","ValidateBy","isOctalValidator","IS_OCTAL","isOctal","value","IsOctal","validationOptions","name","validator","validate","args","defaultMessage"],"sourceRoot":"","sources":["../../../../src/decorator/string/IsOctal.ts"],"sourcesContent":["import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isOctalValidator from 'validator/lib/isOctal';\n\nexport const IS_OCTAL = 'isOctal';\n\n/**\n * Check if the string is a valid octal number.\n * If given value is not a string, then it returns false.\n */\nexport function isOctal(value: unknown): boolean {\n  return typeof value === 'string' && isOctalValidator(value);\n}\n\n/**\n * Check if the string is a valid octal number.\n * If given value is not a string, then it returns false.\n */\nexport function IsOctal(validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_OCTAL,\n      validator: {\n        validate: (value, args): boolean => isOctal(value),\n        defaultMessage: buildMessage(\n          eachPrefix => eachPrefix + '$property must be valid octal number',\n          validationOptions\n        ),\n      },\n    },\n    validationOptions\n  );\n}\n"]},"metadata":{},"sourceType":"module"}