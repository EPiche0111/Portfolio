{"ast":null,"code":"import { registerDecorator } from '../../register-decorator';\nexport function buildMessage(impl, validationOptions) {\n  return function (validationArguments) {\n    var eachPrefix = validationOptions && validationOptions.each ? 'each value in ' : '';\n    return impl(eachPrefix, validationArguments);\n  };\n}\nexport function ValidateBy(options, validationOptions) {\n  return function (object, propertyName) {\n    registerDecorator({\n      name: options.name,\n      target: object.constructor,\n      propertyName: propertyName,\n      options: validationOptions,\n      constraints: options.constraints,\n      validator: options.validator\n    });\n  };\n}","map":{"version":3,"mappings":"AACA,SAASA,iBAAiB,QAAQ,0BAA0B;AAW5D,OAAM,SAAUC,YAAYA,CAC1BC,IAAgE,EAChEC,iBAAqC;EAErC,OAAO,UAACC,mBAAyC;IAC/C,IAAMC,UAAU,GAAGF,iBAAiB,IAAIA,iBAAiB,CAACG,IAAI,GAAG,gBAAgB,GAAG,EAAE;IACtF,OAAOJ,IAAI,CAACG,UAAU,EAAED,mBAAmB,CAAC;EAC9C,CAAC;AACH;AAEA,OAAM,SAAUG,UAAUA,CAACC,OAA0B,EAAEL,iBAAqC;EAC1F,OAAO,UAAUM,MAAc,EAAEC,YAAoB;IACnDV,iBAAiB,CAAC;MAChBW,IAAI,EAAEH,OAAO,CAACG,IAAI;MAClBC,MAAM,EAAEH,MAAM,CAACI,WAAW;MAC1BH,YAAY,EAAEA,YAAY;MAC1BF,OAAO,EAAEL,iBAAiB;MAC1BW,WAAW,EAAEN,OAAO,CAACM,WAAW;MAChCC,SAAS,EAAEP,OAAO,CAACO;KACpB,CAAC;EACJ,CAAC;AACH","names":["registerDecorator","buildMessage","impl","validationOptions","validationArguments","eachPrefix","each","ValidateBy","options","object","propertyName","name","target","constructor","constraints","validator"],"sourceRoot":"","sources":["../../../../src/decorator/common/ValidateBy.ts"],"sourcesContent":["import { ValidationOptions } from '../ValidationOptions';\nimport { registerDecorator } from '../../register-decorator';\nimport { ValidationArguments } from '../../validation/ValidationArguments';\nimport { ValidatorConstraintInterface } from '../../validation/ValidatorConstraintInterface';\n\nexport interface ValidateByOptions {\n  name: string;\n  constraints?: any[];\n  validator: ValidatorConstraintInterface | Function;\n  async?: boolean;\n}\n\nexport function buildMessage(\n  impl: (eachPrefix: string, args?: ValidationArguments) => string,\n  validationOptions?: ValidationOptions\n): (validationArguments?: ValidationArguments) => string {\n  return (validationArguments?: ValidationArguments): string => {\n    const eachPrefix = validationOptions && validationOptions.each ? 'each value in ' : '';\n    return impl(eachPrefix, validationArguments);\n  };\n}\n\nexport function ValidateBy(options: ValidateByOptions, validationOptions?: ValidationOptions): PropertyDecorator {\n  return function (object: object, propertyName: string): void {\n    registerDecorator({\n      name: options.name,\n      target: object.constructor,\n      propertyName: propertyName,\n      options: validationOptions,\n      constraints: options.constraints,\n      validator: options.validator,\n    });\n  };\n}\n"]},"metadata":{},"sourceType":"module"}