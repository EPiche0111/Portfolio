{"ast":null,"code":"import { buildMessage, ValidateBy } from '../common/ValidateBy';\nexport var IS_INT = 'isInt';\n/**\n * Checks if value is an integer.\n */\nexport function isInt(val) {\n  return typeof val === 'number' && Number.isInteger(val);\n}\n/**\n * Checks if value is an integer.\n */\nexport function IsInt(validationOptions) {\n  return ValidateBy({\n    name: IS_INT,\n    validator: {\n      validate: function (value, args) {\n        return isInt(value);\n      },\n      defaultMessage: buildMessage(function (eachPrefix) {\n        return eachPrefix + '$property must be an integer number';\n      }, validationOptions)\n    }\n  }, validationOptions);\n}","map":{"version":3,"mappings":"AACA,SAASA,YAAY,EAAEC,UAAU,QAAQ,sBAAsB;AAE/D,OAAO,IAAMC,MAAM,GAAG,OAAO;AAE7B;;;AAGA,OAAM,SAAUC,KAAKA,CAACC,GAAY;EAChC,OAAO,OAAOA,GAAG,KAAK,QAAQ,IAAIC,MAAM,CAACC,SAAS,CAACF,GAAG,CAAC;AACzD;AAEA;;;AAGA,OAAM,SAAUG,KAAKA,CAACC,iBAAqC;EACzD,OAAOP,UAAU,CACf;IACEQ,IAAI,EAAEP,MAAM;IACZQ,SAAS,EAAE;MACTC,QAAQ,EAAE,UAACC,KAAK,EAAEC,IAAI;QAAc,YAAK,CAACD,KAAK,CAAC;MAAZ,CAAY;MAChDE,cAAc,EAAEd,YAAY,CAC1B,oBAAU;QAAI,iBAAU,GAAG,qCAAqC;MAAlD,CAAkD,EAChEQ,iBAAiB;;GAGtB,EACDA,iBAAiB,CAClB;AACH","names":["buildMessage","ValidateBy","IS_INT","isInt","val","Number","isInteger","IsInt","validationOptions","name","validator","validate","value","args","defaultMessage"],"sourceRoot":"","sources":["../../../../src/decorator/typechecker/IsInt.ts"],"sourcesContent":["import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\n\nexport const IS_INT = 'isInt';\n\n/**\n * Checks if value is an integer.\n */\nexport function isInt(val: unknown): val is Number {\n  return typeof val === 'number' && Number.isInteger(val);\n}\n\n/**\n * Checks if value is an integer.\n */\nexport function IsInt(validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_INT,\n      validator: {\n        validate: (value, args): boolean => isInt(value),\n        defaultMessage: buildMessage(\n          eachPrefix => eachPrefix + '$property must be an integer number',\n          validationOptions\n        ),\n      },\n    },\n    validationOptions\n  );\n}\n"]},"metadata":{},"sourceType":"module"}