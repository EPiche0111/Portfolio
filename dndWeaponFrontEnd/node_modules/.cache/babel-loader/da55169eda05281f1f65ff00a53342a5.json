{"ast":null,"code":"import { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isCreditCardValidator from 'validator/lib/isCreditCard';\nexport var IS_CREDIT_CARD = 'isCreditCard';\n/**\n * Checks if the string is a credit card.\n * If given value is not a string, then it returns false.\n */\nexport function isCreditCard(value) {\n  return typeof value === 'string' && isCreditCardValidator(value);\n}\n/**\n * Checks if the string is a credit card.\n * If given value is not a string, then it returns false.\n */\nexport function IsCreditCard(validationOptions) {\n  return ValidateBy({\n    name: IS_CREDIT_CARD,\n    validator: {\n      validate: function (value, args) {\n        return isCreditCard(value);\n      },\n      defaultMessage: buildMessage(function (eachPrefix) {\n        return eachPrefix + '$property must be a credit card';\n      }, validationOptions)\n    }\n  }, validationOptions);\n}","map":{"version":3,"mappings":"AACA,SAASA,YAAY,EAAEC,UAAU,QAAQ,sBAAsB;AAC/D,OAAOC,qBAAqB,MAAM,4BAA4B;AAE9D,OAAO,IAAMC,cAAc,GAAG,cAAc;AAE5C;;;;AAIA,OAAM,SAAUC,YAAYA,CAACC,KAAc;EACzC,OAAO,OAAOA,KAAK,KAAK,QAAQ,IAAIH,qBAAqB,CAACG,KAAK,CAAC;AAClE;AAEA;;;;AAIA,OAAM,SAAUC,YAAYA,CAACC,iBAAqC;EAChE,OAAON,UAAU,CACf;IACEO,IAAI,EAAEL,cAAc;IACpBM,SAAS,EAAE;MACTC,QAAQ,EAAE,UAACL,KAAK,EAAEM,IAAI;QAAc,mBAAY,CAACN,KAAK,CAAC;MAAnB,CAAmB;MACvDO,cAAc,EAAEZ,YAAY,CAAC,oBAAU;QAAI,iBAAU,GAAG,iCAAiC;MAA9C,CAA8C,EAAEO,iBAAiB;;GAE/G,EACDA,iBAAiB,CAClB;AACH","names":["buildMessage","ValidateBy","isCreditCardValidator","IS_CREDIT_CARD","isCreditCard","value","IsCreditCard","validationOptions","name","validator","validate","args","defaultMessage"],"sourceRoot":"","sources":["../../../../src/decorator/string/IsCreditCard.ts"],"sourcesContent":["import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isCreditCardValidator from 'validator/lib/isCreditCard';\n\nexport const IS_CREDIT_CARD = 'isCreditCard';\n\n/**\n * Checks if the string is a credit card.\n * If given value is not a string, then it returns false.\n */\nexport function isCreditCard(value: unknown): boolean {\n  return typeof value === 'string' && isCreditCardValidator(value);\n}\n\n/**\n * Checks if the string is a credit card.\n * If given value is not a string, then it returns false.\n */\nexport function IsCreditCard(validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_CREDIT_CARD,\n      validator: {\n        validate: (value, args): boolean => isCreditCard(value),\n        defaultMessage: buildMessage(eachPrefix => eachPrefix + '$property must be a credit card', validationOptions),\n      },\n    },\n    validationOptions\n  );\n}\n"]},"metadata":{},"sourceType":"module"}