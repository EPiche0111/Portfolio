{"ast":null,"code":"import { buildMessage, ValidateBy } from '../common/ValidateBy';\nexport var IS_OBJECT = 'isObject';\n/**\n * Checks if the value is valid Object.\n * Returns false if the value is not an object.\n */\nexport function isObject(value) {\n  return value != null && (typeof value === 'object' || typeof value === 'function') && !Array.isArray(value);\n}\n/**\n * Checks if the value is valid Object.\n * Returns false if the value is not an object.\n */\nexport function IsObject(validationOptions) {\n  return ValidateBy({\n    name: IS_OBJECT,\n    validator: {\n      validate: function (value, args) {\n        return isObject(value);\n      },\n      defaultMessage: buildMessage(function (eachPrefix) {\n        return eachPrefix + '$property must be an object';\n      }, validationOptions)\n    }\n  }, validationOptions);\n}","map":{"version":3,"mappings":"AACA,SAASA,YAAY,EAAEC,UAAU,QAAQ,sBAAsB;AAE/D,OAAO,IAAMC,SAAS,GAAG,UAAU;AAEnC;;;;AAIA,OAAM,SAAUC,QAAQA,CAAaC,KAAc;EACjD,OAAOA,KAAK,IAAI,IAAI,KAAK,OAAOA,KAAK,KAAK,QAAQ,IAAI,OAAOA,KAAK,KAAK,UAAU,CAAC,IAAI,CAACC,KAAK,CAACC,OAAO,CAACF,KAAK,CAAC;AAC7G;AAEA;;;;AAIA,OAAM,SAAUG,QAAQA,CAACC,iBAAqC;EAC5D,OAAOP,UAAU,CACf;IACEQ,IAAI,EAAEP,SAAS;IACfQ,SAAS,EAAE;MACTC,QAAQ,EAAE,UAACP,KAAK,EAAEQ,IAAI;QAAc,eAAQ,CAACR,KAAK,CAAC;MAAf,CAAe;MACnDS,cAAc,EAAEb,YAAY,CAAC,oBAAU;QAAI,iBAAU,GAAG,6BAA6B;MAA1C,CAA0C,EAAEQ,iBAAiB;;GAE3G,EACDA,iBAAiB,CAClB;AACH","names":["buildMessage","ValidateBy","IS_OBJECT","isObject","value","Array","isArray","IsObject","validationOptions","name","validator","validate","args","defaultMessage"],"sourceRoot":"","sources":["../../../../src/decorator/typechecker/IsObject.ts"],"sourcesContent":["import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\n\nexport const IS_OBJECT = 'isObject';\n\n/**\n * Checks if the value is valid Object.\n * Returns false if the value is not an object.\n */\nexport function isObject<T = object>(value: unknown): value is T {\n  return value != null && (typeof value === 'object' || typeof value === 'function') && !Array.isArray(value);\n}\n\n/**\n * Checks if the value is valid Object.\n * Returns false if the value is not an object.\n */\nexport function IsObject(validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_OBJECT,\n      validator: {\n        validate: (value, args): boolean => isObject(value),\n        defaultMessage: buildMessage(eachPrefix => eachPrefix + '$property must be an object', validationOptions),\n      },\n    },\n    validationOptions\n  );\n}\n"]},"metadata":{},"sourceType":"module"}